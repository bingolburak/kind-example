global:
  logging:
    level: info
  oidcProviderPreset: ""
  oidcProvider:
    endpoints:
      authorization:
        redirectUrl: "http://st1.mo360mes.localhost/login"
      logout:
        additionalQueryParams:
          callback_uri: ""

tex-service-helm:
  replicas: "1"
  image:
    pullPolicy: IfNotPresent
  inbound:
    service:
      # CAUTION: applying this NodePort configuration in another context than ldev
      # is very bad behaviour and should therefore never been done! This is a workaround
      # to validate jwt tokens when running services directly in your IDE.
      # In every other case using ClusterIP configuration is preferred.
      type: "NodePort"
      ports:
        - name: "http"
          port: 80
          targetPort: "http"
          nodePort: 30002

tex-caddy-helm:
  replicas: "1"
  image:
    pullPolicy: IfNotPresent
  annotations:
    ingress:
      kubernetes.io/ingress.class: "nginx"
  inbound:
    ingress:
      enabled: true
      rules:
        - host: st1.mo360mes.localhost
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: tex-caddy
                    port:
                      name: http
    service:
      type: "NodePort"
      # Please use the DHC CaaS documentation (https://git.daimler.com/DHC/CaaS/tree/master/technical-docs/fwaas) to get your load balancer data
      # or follow i3-access example instructions here: https://git.daimler.com/i3/i3-access/blob/master/docs/traffic_management/handle_incoming_traffic.md
      ports:
        - name: "http"
          port: 80
          targetPort: "http"
    tls:
      enabled: false

  extra:
    # See https://kubernetes.io/docs/concepts/storage/volumes/
    volumes:
      - name: tex-caddy-traefik-config-dynamic
        configMap:
          defaultMode: 420
          name: tex-caddy-traefik-config-dynamic
    # Specify additional volumeMounts that are applied to tex-caddy and traefik (if enabled)
    volumeMounts:
      - mountPath: /config-dynamic
        name: tex-caddy-traefik-config-dynamic
    # Specify additional configmaps that are deployed to the same namespace as i3-access and can be mounted inside the pods via extra.volumes and extra.volumeMounts
    # configmaps:
    #   - suffix: configmap_name_suffix
    #     data:
    #       some_key: some_value
    #   - suffix: another_configmap_name_suffix
    #     data:
    #       another_key: another_value
    configmaps:
      - suffix: traefik-config-dynamic
        data:
          traefik-conf-dynamic.toml: |
            [http]
              [http.middlewares]
                [http.middlewares.stripPrefixRegexMiddleware]
                  [http.middlewares.stripPrefixRegexMiddleware.stripPrefixRegex]
                    regex = ["/[^/]*"]

  texCaddy:
    caddyfile:
      health:
        path: "/infra/lbtest1.html"
      tex:
        paths:
          - except: ["/favicon.ico", "/testapp/favicon.ico", "/testapp/static", "/infra/lbtest1.html"]
          - ui: ["/ui", "/testapp/ui"]
          - api: ["/api", "/testapp/api"]
      headers:
        - settings:
            - name: Strict-Transport-Security
              value: "max-age=31536000; preload;"
            - name: X-Frame-Options
              value: "DENY"
            - name: X-XSS-Protection
              value: "1; mode=block"
            - name: X-Content-Type-Options
              value: "nosniff"
            - name: Content-Security-Policy
              value: "frame-ancestors 'none'; script-src 'self'; object-src 'none';"
            - name: X-Content-Security-Policy
              value: "frame-options 'deny';"
            - name: Referrer-Policy
              value: "no-referrer"
            - name: Server
              remove: true
    # Defines properties for the cookie created by i3-tex-caddy
    cookies:
      tex:
        # Defines the host for the created cookie.
        # This must match the hostname of your application.
        # Example: caas-int.app.corpintra.net
        domain: "st1.mo360mes.localhost"
        # Defines the validity path for the created cookie.
        # This must match the relative path to your application.
        # Example: /app
        path: "/"
        # Defines the timeout when TEX cookie expires and a new refresh token is requested from the OIDC provider.
        # Examples: 8h, 360m. Valid time units are "ns", "us", "ms", "s", "m", "h". Default: 6h.
        # For security reasons this value should only be changed in rare cases.
        refreshTokenTimeout: 168h
        secure: "false"
        # Configure keys for for cookie de- and encryption
        # If nothing is configured here, a random blockKey will be generated.
        # Please note that a rolling upgrade with a randomly generated blockKey will invalidate all active cookies.
        blockKey:
          # Specify 32 bytes strings for cookie de- and encryption.
          # e.g. "1234567890abcdef1234567890abcdef"
          fromString:
            active:
        # Configure keys for for cookie validation
        # If nothing is configured here, a random blockKey will be generated.
        # Please note that a rolling upgrade with a randomly generated hashKey will invalidate all active cookies.
        hashKey:
          # Specify 16 bytes strings for cookie validation.
          # e.g. "1234567890abcdef"
          fromString:
            active:
      state:
        multiple:
          enabled: true
          expiry: 24h
    # Defines how i3-tex-caddy handles tokens.
    # Possible values:
    # COOKIE: only tokens in the tex cookie will be considered.
    # HEADER: only tokens in the header will be considered.
    # COOKIE_HEADER: i3-tex-caddy checks first tokens from the tex cookie and then in the header.
    # HEADER_COOKIE: i3-tex-caddy checks first tokens in the header and then from the tex cookie.
    tokenMode: "COOKIE_HEADER"
    routes:
      logoutUrl: "/logout"
      loginUrl: "/login"
      customErrorPageUrl: "http://st1.mo360mes.localhost/testapp/static/error.html"
    tokenInfo:
      enabled: true
  traefik:
    providers:
      kubernetesIngress:
        # Must have prefix "traefik". this must match with annotations of the ingress resources from backend services
        ingressClass: "traefik-i3-access"
      file:
        filename: "/config-dynamic/traefik-conf-dynamic.toml"