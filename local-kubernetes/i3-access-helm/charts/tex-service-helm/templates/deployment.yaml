apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourceName }}
  labels:
    {{- include "texService.defaultLabels" . | nindent 4 }}
    {{- if .Values.labels.deployment }}
    {{- toYaml .Values.labels.deployment | nindent 4 }}
    {{- end }}
  annotations:
    {{- toYaml .Values.annotations.deployment | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    {{- if .Values.updateStrategy }}
    {{- toYaml .Values.updateStrategy | nindent 4 }}
    {{- end }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  selector:
    matchLabels:
      {{- include "texService.defaultLabels" . | nindent 6 }}
      app-type: tex
  template:
    metadata:
      labels:
        {{- include "texService.defaultLabels" . | nindent 8 }}
        app-type: tex
        {{- if .Values.labels.pod }}
        {{- toYaml .Values.labels.pod | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.global.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
        prometheus.io/path: "/metrics"
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.annotations.pod }}
        {{- toYaml .Values.annotations.pod | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ .Values.resourceName }}
      {{- if .Values.extra.initContainers }}
      initContainers:
        {{- toYaml .Values.extra.initContainers | nindent 8 }}
      {{- end }}
      containers:
      - name: tex-service
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}{{- if .Values.image.jdk -}}-jdk{{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 10 }}
        command:
        - /usr/bin/tex-service
        env:
        - name: TEX_SERVICE_CONFIG_DIR
          value: "/config"
        - name: TEX_SERVICE_CONFIG_NAME
          value: "tex-service-config.yaml"
        - name: GODEBUG # Set upcoming Golang 1.16 memory release setting
          value: madvdontneed=1
        {{- if .Values.extra.envs  }}
        {{- toYaml .Values.extra.envs | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8090
        readinessProbe:
          {{- if .Values.texService.probes.readiness }}
          {{- toYaml .Values.texService.probes.readiness | nindent 10 }}
          {{- else }}
          httpGet:
            path: /health
            port: 8090
          {{- end }}
        livenessProbe:
          {{- if .Values.texService.probes.liveness }}
          {{- toYaml .Values.texService.probes.liveness | nindent 10 }}
          {{- else }}
          tcpSocket:
            port: 8090
          initialDelaySeconds: 10
          timeoutSeconds: 5
          {{- end }}
        {{- if .Values.texService.securityContext }}
        securityContext:
          {{- toYaml .Values.texService.securityContext | nindent 10 }}
        {{- end }}
        {{- if .Values.texService.resources }}
        resources:
          {{- toYaml .Values.texService.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: {{ .Values.resourceName }}-config
            mountPath: "/config"
            readOnly: true
          {{- include "texService.volumeMounts" . | nindent 10 }}
          {{- include "jwt.volumeMounts" . | nindent 10 }}
          {{- if .Values.extra.volumeMounts  }}
          {{- toYaml .Values.extra.volumeMounts | trim | nindent 10 }}
          {{- end }}

      {{- if .Values.extra.containers }}
      {{- toYaml .Values.extra.containers | trim | nindent 6 }}
      {{ end }}

      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}

      volumes:
        {{- include "texService.volumes" . | nindent 8 }}
        {{- include "jwt.volumes" . | nindent 8 }}
        - name: {{ .Values.resourceName }}-config
          configMap:
            name: {{ .Values.resourceName }}-config
        {{- if .Values.extra.volumes  }}
        {{ toYaml .Values.extra.volumes | trim | nindent 8 }}
        {{ end }}
    {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
    {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}      
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}