{{/*
  There are 3 cases (priority from high to low)...
  * sign+verify keys given via string input:
      - Generate filename (e.g. `/secrets/cookie.block.key`) to be used in configmap
      - Use base64 notation to create secret entries (e.g. `cookie.block.key`)
  * secret reference + key inside secret given:
      - Use filenames in configmap, generated from volumeMounts + secret inside key from created volumeMount
      - Create secret volume + volumeMount (path)
      - Don't create extra secret
  * neither string input nor secret reference given:
      - Generate filename `/secrets/cookie.block.key` to be used in configmap
      - Generate random key to be used in secret (`cookie.block.key`).
*/}}


{{- define "cookie.keys.secretEnvs" -}}
  {{- if and .Values.texCaddy.cookies.tex.blockKey.fromString.active .Values.texCaddy.cookies.tex.hashKey.fromString.active -}}
- name: COOKIE_BLOCK_KEY
  valueFrom:
    secretKeyRef:
      name: {{ printf "%s-secrets" .Values.resourceName }}
      key: "cookie.block.key.active"
- name: COOKIE_HASH_KEY
  valueFrom:
    secretKeyRef:
      name: {{ printf "%s-secrets" .Values.resourceName }}
      key: "cookie.hash.key.active"
  {{- else if and .Values.texCaddy.cookies.tex.blockKey.fromSecret.active.secretName .Values.texCaddy.cookies.tex.hashKey.fromSecret.active.secretName -}}
    {{- $blockKeys := dict -}}
    {{- range $index, $ref := .Values.texCaddy.cookies.tex.blockKey.fromSecret -}}
      {{- $_ := required (printf "Please provide a secret name for tex-caddy-helm.texCaddy.cookies.tex.blockKey.fromSecret.%d" $index) $ref.secretName -}}
      {{- $_ := required (printf "Please provide a property key for tex-caddy-helm.texCaddy.cookies.tex.blockKey.fromSecret.%d" $index) $ref.key -}}
      {{- $_ := set $blockKeys $ref.secretName $ref.key -}}
    {{- end -}}
    {{- range $secret, $key := $blockKeys }}
- name: COOKIE_BLOCK_KEY
  valueFrom:
    secretKeyRef:
      name: {{ $secret }}
      key: {{ $key }}
    {{- end -}}
    {{- $hashKeys := dict -}}
    {{- range $index, $ref := .Values.texCaddy.cookies.tex.hashKey.fromSecret -}}
      {{- $_ := required (printf "Please provide a secret name for tex-caddy-helm.texCaddy.cookies.tex.hashKey.fromSecret.%d" $index) $ref.secretName -}}
      {{- $_ := required (printf "Please provide a property key for tex-caddy-helm.texCaddy.cookies.tex.hashKey.fromSecret.%d" $index) $ref.key -}}
      {{- $_ := set $hashKeys $ref.secretName $ref.key -}}
    {{- end -}}
    {{- range $secret, $key := $hashKeys }}
- name: COOKIE_HASH_KEY
  valueFrom:
    secretKeyRef:
      name: {{ $secret }}
      key: {{ $key }}
    {{- end -}}
  {{- else -}}
- name: COOKIE_BLOCK_KEY
  valueFrom:
    secretKeyRef:
      name: {{ printf "%s-secrets" .Values.resourceName }}
      key: "cookie.block.key.active"
- name: COOKIE_HASH_KEY
  valueFrom:
    secretKeyRef:
      name: {{ printf "%s-secrets" .Values.resourceName }}
      key: "cookie.hash.key.active"
  {{- end -}}
{{- end -}}

{{- define "cookie.keys.volumes" -}}
  {{- if and .Values.texCaddy.cookies.tex.blockKey.fromString.active .Values.texCaddy.cookies.tex.hashKey.fromString.active -}}
  {{- else if and .Values.texCaddy.cookies.tex.blockKey.fromSecret.active.secretName .Values.texCaddy.cookies.tex.hashKey.fromSecret.active.secretName -}}
    {{- $volumes := dict -}}
    {{- range $index, $ref := .Values.texCaddy.cookies.tex.blockKey.fromSecret -}}
      {{- $_ := required (printf "Please provide a secret name for tex-caddy.texCaddy.cookies.tex.blockKey.fromSecret.%d" $index) $ref.secretName -}}
      {{- $_ := required (printf "Please provide a property key for tex-caddy.texCaddy.cookies.tex.blockKey.fromSecret.%d" $index) $ref.key -}}
      {{- $_ := set $volumes $ref.secretName $ref.key -}}
    {{- end -}}
    {{- range $index, $ref := .Values.texCaddy.cookies.tex.hashKey.fromSecret -}}
      {{- $_ := required (printf "Please provide a secret name for tex-caddy.texCaddy.cookies.tex.hashKey.fromSecret.%d" $index) $ref.secretName -}}
      {{- $_ := required (printf "Please provide a property key for tex-caddy.texCaddy.cookies.tex.hashKey.fromSecret.%d" $index) $ref.key -}}
      {{- $_ := set $volumes $ref.secretName $ref.key -}}
    {{- end -}}
    {{- range $secret, $_ := $volumes }}
- name: {{ $secret }}
  secret:
    secretName: {{ $secret }}
    {{- end }}
  {{- end -}}
{{- end -}}

{{- define "cookie.keys.secret" -}}
  {{- if and .Values.texCaddy.cookies.tex.blockKey.fromString.active .Values.texCaddy.cookies.tex.hashKey.fromString.active -}}
    {{- range $index, $key := .Values.texCaddy.cookies.tex.blockKey.fromString }}
cookie.block.key.{{$index}}: {{ $key | b64enc | quote }}
    {{- end }}
    {{- range $index, $key := .Values.texCaddy.cookies.tex.hashKey.fromString }}
cookie.hash.key.{{$index}}: {{ $key | b64enc | quote }}
    {{- end }}
  {{- else if and .Values.texCaddy.cookies.tex.blockKey.fromSecret.active.secretName .Values.texCaddy.cookies.tex.hashKey.fromSecret.active.secretName -}}
  {{- else -}}
cookie.block.key.active: {{ randAlphaNum 32 | b64enc | quote }}
cookie.hash.key.active: {{ randAlphaNum 16 | b64enc | quote }}
  {{- end -}}
{{- end -}}