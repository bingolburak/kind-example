## my-values.yaml for i3-access
# This file contains a collection of mandatory and commonly used properties.
# Copy this file and adjust according to our documentation.

##
# Configuration section for global values (those values are the same for i3-tex-caddy and i3-tex-service)
global:
  logging:
    # Specify logLevel from one of [info, debug, warn, error, fatal]
    level: info
    # Specify either logFormat `json` or leave blank
    format: console
  # Specify a preset for the OIDC provider you want to configure i3-access for.
  # No preset means you have to provide all endpoints manually (can be used for custom OIDC providers).
  # If you specify a property that is filled by the preset, your value is used instead.
  # A valid preset must be one of ...:
  # - gased-prod                # GAS-OIDC cloud login
  # - gased-int                 # GAS-OIDC cloud login
  # - ciam-emea-int             # CIAM NextGen internet EMEA
  # - ciam-emea-preprod         # CIAM NextGen internet EMEA
  # - ciam-emea-prod            # CIAM NextGen internet EMEA
  # - ciam-cn-int               # CIAM NextGen internet China
  # - ciam-cn-preprod           # CIAM NextGen internet China
  # - ciam-cn-prod              # CIAM NextGen internet China
  # - ciam-emea-int-intra       # CIAM NextGen intranet EMEA
  # - ciam-emea-preprod-intra   # CIAM NextGen intranet EMEA
  # - ciam-emea-prod-intra      # CIAM NextGen intranet EMEA
  # - ciam-cn-int-intra         # CIAM NextGen intranet China
  # - ciam-cn-preprod-intra     # CIAM NextGen intranet China
  # - ciam-cn-prod-intra        # CIAM NextGen intranet China
  oidcProviderPreset: "<REPLACEME>"
  # OIDC provider configuration
  oidcProvider:
    clientCredentials:
      # Credentials for the connection to the OIDC provider.
      # These properties are mandatory.
      # Don't store these values unencrypted in github; see https://git.daimler.com/i3/i3-access/blob/master/docs/installation.md#handling-secrets
      authCode:
        clientID: "<REPLACEME>"
        clientSecret: "<REPLACEME>"
      # Credentials for the introspection endpoint of the OIDC provider
      # These properties are mandatory.
      # Don't store these values unencrypted in github; see https://git.daimler.com/i3/i3-access/blob/master/docs/installation.md#handling-secrets
      tokenIntrospection:
        clientID: "<REPLACEME>"
        clientSecret: "<REPLACEME>"
    # Configuration of the OIDC provider endpoints
    endpoints:
      # Configuration for the OAuth Authorization Endpoint
      authorization:
        # Defines the OP Redirect URL after a successful login process, which is required to handle the next steps in i3-tex-caddy for the token exchange.
        # The path of the URL must fit with the tex-caddy login endpoint (tex-caddy-helm.texCaddy.routes.loginUrl) which is by default set to "/login" and SHOULD NOT be changed if not really required.
        # See https://git.daimler.com/i3/i3-access/blob/master/docs/login_handling.md for details
        # Since this value goes directly to tex-caddy's Caddyfile, it can be used with Caddy placeholders (https://caddyserver.com/docs/caddyfile/concepts#placeholders)
        # e.g. "https://caas-int.app.corpintra.net/login" or "https://{hostport}/login"
        # This value is mandatory.
        redirectUrl: "<REPLACEME>"
        # Modify the list of scopes which are requested from the OIDC Provider. All scopes must be configured in the Approval Tool.
        # Example with additional scopes: ["openid", "profile", "email", "offline_access", "entitlement_group", "authorization_group"]
        scopes:  ["openid", "profile", "email", "offline_access"]
        # Specify additional query parameters that are appended to the authorization URL
        additionalQueryParams:
          # Callback Url when using CIAM
          # Example: "http://myurl.com/ciam-callback"
          callback_uri: ""
      # Configuration for the OIDC Front-Channel Logout Endpoint
      logout:
        # Specify additional query parameters that are appended to the OIDC Front-Channel Logout URL
        additionalQueryParams:
          # Post logout redirect Url for CIAM. CIAM will redirect to this URL after successful logout.
          post_logout_redirect_uri: "<Post Logout Redirection URI for CIAM, empty for GAS-OIDC>"
  tokenExchange:
    # Configuration for token exchange connection between i3-tex-caddy and i3-tex-service
    # Don't store these values unencrypted in github; see https://git.daimler.com/i3/i3-access/blob/master/docs/installation.md#handling-secrets
    credentials:
      # Client id for basic authentication of token exchange clients.
      # This value can be defined by each project itself and is mandatory
      clientID: "<REPLACEME>"
      # Client secret for basic authentication of token exchange clients.
      # This value can be defined by each project itself and is mandatory
      clientSecret: "<REPLACEME>"

##
# Configuration section for tex-caddy helm subchart.
# We've listed mandatory and most commonly used properties.
# For configuration details see values.yaml of i3-access (helm/i3-access/values.yaml)
tex-caddy-helm:
  replicas: "2"
  # Configure resources that are tied to inbound connections. This includes Kubernetes services, ingress objects and TLS configuration.
  inbound:
    # Creates a Kubernetes service pointing to i3-tex-caddy.
    service:
      type: "LoadBalancer"
      # Please see https://git.daimler.com/i3/i3-access/blob/master/docs/handle_incoming_traffic.md for configuration details.
      loadBalancer:
        # An IP that is already used or was used before might also be used here.
        # Default is to leave it empty which means that the IP is automatically assigned.
        ip: ""
        # Define ip ranges that are allowed to pass FWaaS and access your service, e.g. 53.9.9.0/24
        # It is highly recommended to set the sourceRanges.
        sourceRanges: []
  texCaddy:
    # Defines Kubernetes compute resources for the i3-tex-caddy container
    resources: {}
    # Configure i3-tex-caddy specific routes
    routes:
      # Defines the base url of your application
      # This value is not mandatory but helps with X-Forwarded-Proto problems
      # e.g. http://myurl.com/app
      applicationBaseUrl: ""
      # User Logged Out Notification Endpoint.
      # This path is called by GAS OIDC service to notify i3-tex-caddy that the users session should be terminated.
      # Must match the Logout URI of your environment in the cd-approval request.
      # If empty, defaults to "/user_logged_out".
      userLoggedOutUrl: ""
    # Defines how i3-tex-caddy handles tokens.
    # Possible values:
    # COOKIE: only tokens in the tex cookie will be considered.
    # HEADER: only tokens in the header will be considered.
    # COOKIE_HEADER: i3-tex-caddy checks first tokens from the tex cookie and then in the header.
    # HEADER_COOKIE: i3-tex-caddy checks first tokens in the header and then from the tex cookie.
    # For technical users, this property has to be adjusted to accept cookies (for SPA via Browser) and access tokens (for technical users) in the header.
    tokenMode: "COOKIE"

    # Defines properties for the cookie created by i3-tex-caddy
    cookies:
      # Defines properties for the "session" cookie created by i3-tex-caddy
      tex:
        # Defines the host for the created cookie.
        # Since this value goes directly to tex-caddy's Caddyfile, it can be used with Caddy placeholders (https://caddyserver.com/docs/caddyfile/concepts#placeholders)
        # Example: "caas-int.app.corpintra.net" or "{host}"
        # This value is mandatory.
        domain: "<REPLACEME>"
        # Defines the validity path for the created cookie.
        # This must match the relative path to your application.
        # Example: /app
        path: "/"
        # Configure keys for for cookie de- and encryption
        # If nothing is configured here, a random blockKey will be generated.
        # Please note that a rolling upgrade with a randomly generated blockKey will invalidate all active cookies.
        # Don't store these values unencrypted in github; see https://git.daimler.com/i3/i3-access/blob/master/docs/installation.md#handling-secrets
        blockKey:
          # Specify 32 bytes strings for cookie de- and encryption.
          # e.g. "1234567890abcdef1234567890abcdef"
          fromString:
            active:
        # Configure keys for for cookie validation
        # If nothing is configured here, a random blockKey will be generated.
        # Please note that a rolling upgrade with a randomly generated hashKey will invalidate all active cookies.
        # Don't store these values unencrypted in github; see https://git.daimler.com/i3/i3-access/blob/master/docs/installation.md#handling-secrets
        hashKey:
          # Specify 16 bytes strings for cookie validation.
          # e.g. "1234567890abcdef"
          fromString:
            active:
    # Defines generation of the i3-tex-caddy configuration ("Caddyfile") from properties.
    # Only properties listed are supported by the Deployment.
    # If you need a more advanced configuration, please specify `texCaddy.caddyfileOverride`
    caddyfile:
      # Set a path to enable the external health endpoint that returns "200 OK". Note that you must also add this path to the "except" paths below.
      health:
        # e.g.
        # path: "/infra/lbtest1.html"
        path:
      # Defines the i3-tex-caddy plugin configuration
      tex:
        # Specify a list of paths to be handled different depending on their type
        # Each list item can hold either `except`, `api` or `ui` as property. Ordering of the items is preserved when written to Caddyfile.
        # * except: Defines an array of paths to exclude from i3-tex-caddy protection.
        # * api: Defines an array of paths which will get HTTP status 401 if not authorized.
        # * ui: Defines an array of paths which will be redirected to global.oidcProvider.authUrl instead of getting HTTP status 401 if not authorized.
        # Paths are matched by "starts-with"-based golang regular expression (regular expression is automatically prefixed with '^')
        # PLEASE NOTE:
        # At except, the authorization header is removed due to a security finding. If you need a route that should remain untouched by caddy, this must be configured by tex-caddy-helm.texCaddy.caddyfile.additionalCaddyfileDirectives
        # See: https://git.daimler.com/i3/i3-access/blob/master/docs/configure_caddy.md#bypass-requests
        paths:
          # # Further examples:
          # - except: ["/favicon.ico", "/assets/"]
          # - api: ["/api"]
          - ui: [ "/" ]

  traefik:
    # Define Kubernetes compute resources for the Traefik container inside i3-tex-caddy pod
    resources: {}
    # Configuration of Traefik configuration providers
    providers:
      # Configuration of Traefik Kubernetes Ingress provider, see https://doc.traefik.io/traefik/v2.5/providers/kubernetes-ingress/
      kubernetesIngress:
        # List of additional namespaces where Traefik should watch for ingress definitions.
        # Please note that the rights for watching ingresses in additional namespaces and the network policies required to forward requests to additional namespaces are not deployed by this helm chart and have to be configured. 
        # Default: The namespace where tex-caddy is deployed (empty array).
        # e.g. ["default", "production"]
        namespaces: []
        # Reference to an ingress class that identifies Ingress objects to be processed by Traefik.
        # If the parameter is non-empty, only Ingresses containing an annotation with the same value are processed.
        # Otherwise, Ingresses missing an ingress class, having an empty value, or the value `traefik` are processed.
        # e.g. "traefik-internal"
        ingressClass: ""
##
# Configuration section for tex-service helm subchart.
# We've listed mandatory and most commonly used properties.
# For configuration details see values.yaml of tex-service (charts/tex-service-helm/values.yaml)
tex-service-helm:
  replicas: "2"
  texService: 
    # Defines Kubernetes compute resources for the i3-tex-service container
    resources: {}
    # Configure default mappers that should be created without having to configure them manually via `tex-service-helm.texService.mappers`
    preconfiguredMappers:
      # Predefined mapper for access token validation
      introspection:
        enabled: true
        # Conditions that must match the response of the introspection endpoint
        conditions:
          # Specify a list of client ids that are expected in the response.
          # This value is mandatory.
          # Don't store these value unencrypted in github; see https://git.daimler.com/i3/i3-access/blob/master/docs/installation.md#handling-secrets
          - key: client_id
            values: ["<REPLACEME>"]
          # Specify a list of scopes that are expected in the response.
          - key: "scope"
            # Split the string of received scopes and check for existence of "openid" substring.
            expression: "{{ splitList \" \" . | has \"openid\" }}"
          # Specify a list of required audiences, alternatively to expected clientIDs
          # - key: "aud"
          #   values: []
      # Predefined mapper that queries userInfo endpoint and maps basic user information to the generated JWT
      userinfo:
        enabled: true
        # Conditions that must be valid to execute the mapper
        preconditions: []
        # Specify a list of properties that should be mapped into the generated JWT
        mappings: 
          - source: sub
            target: sub
          - source: given_name
            target: given_name
          - source: family_name
            target: family_name
          - source: email
            target: email
    # Configure a list of mappers that is built into your JWT
    # See https://git.daimler.com/i3/i3-access/blob/master/docs/mapper_customize_jwt.md
    mappers: []
