apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourceName }}
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Values.resourceName }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "echojwt.defaultLabels" . | nindent 6 }}
{{- if .Values.labels}}
{{ toYaml .Values.labels | indent 6 }}
{{- end}}
  template:
    metadata:
      labels:
        {{- include "echojwt.defaultLabels" . | nindent 8 }}
{{- if .Values.labels}}
{{ toYaml .Values.labels | indent 8 }}
{{- end}}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
{{- if .Values.annotations}}
{{ toYaml .Values.annotations | indent 8 }}
{{- end}}
    spec:
      containers:
      - name: {{ .Values.resourceName }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default "latest"}}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        env:
        - name: JWKS_URL
          value: {{ quote .Values.echoJwt.jwksUrl }}
        - name: ISSUER
          value: {{ quote .Values.echoJwt.issuer }}
        - name: BASE_PATH
          value: {{ quote .Values.echoJwt.basePath }}
        {{- if .Values.echoJwt.loglevel }}
        - name: LOGLEVEL
          value: {{ .Values.echoJwt.loglevel }}
        {{- end }}
        {{- if .Values.echoJwt.tracing.enabled }}
        {{- range $key, $value :=  .Values.echoJwt.tracing.environment }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{ else }}
        - name: JAEGER_AGENT_HOST
          value: "localhost"
        - name: JAEGER_AGENT_PORT
          value: "6831"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "0"
        {{- end }}
        {{- if .Values.echoJwt.endpoint.exposed }}
        ports:
        - name: http
          containerPort: 8080
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 -}}
        {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
{{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- if .Values.extraContainerVolumes }}
      volumes:
{{ toYaml .Values.extraContainerVolumes | indent 6 }}
{{- end }}

