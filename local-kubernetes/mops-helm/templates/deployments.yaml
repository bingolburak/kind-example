apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mops.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Values.mops.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.mops.replicas }}
  selector:
    matchLabels:
      name: {{ .Values.mops.name }}
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
      chart: {{ .Chart.Name }}
      app: mops
  template:
    metadata:
      labels:
        name: {{ .Values.mops.name }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}
        app: mops
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ .Values.mops.name }}
      containers:
      - name: {{ .Values.mops.name }}
        image: {{ .Values.mops.imageRepository }}:{{ .Values.mops.imageTag | default "latest"}}
        imagePullPolicy: {{ .Values.mops.imagePullPolicy }}
        env:
        {{- if .Values.mops.basePath }}
        - name: BASE_PATH
          value: {{ .Values.mops.basePath }}
        {{end}}
        {{- if .Values.mops.logLevel }}
        - name: LOGLEVEL
          value: {{ .Values.mops.logLevel }}
        {{end}}
        {{- if .Values.mops.dozyUser }}
        - name: DOZY_USER
          value: {{ .Values.mops.dozyUser }}
        {{end}}
        {{- if .Values.mops.tokenExpirySeconds }}
        - name: TOKEN_EXPIRY_SECONDS
          value: {{ .Values.mops.tokenExpirySeconds | quote }}
        {{end}}
        - name: DOZY_USER_AUTHORIZATION_SLEEP_SECONDS
          value: {{ .Values.mops.dozyUserAuthorizationSleepSeconds | default 0 | quote }}
        - name: DOZY_USER_INTROSPECTION_SLEEP_SECONDS
          value: {{ .Values.mops.dozyUserIntrospectionSleepSeconds | default 0 | quote }}
        - name: DOZY_USER_USERINFO_SLEEP_SECONDS
          value: {{ .Values.mops.dozyUserUserinfoSleepSeconds | default 0 | quote }}
        ports:
        - name: http
          containerPort: 3000
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 3000
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 -}}
        {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
